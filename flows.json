[
    {
        "id": "8381c865.236028",
        "type": "subflow",
        "name": "Single value",
        "info": "The 'single value' subflow allows to extract data from processing node.\r\n\r\n * Filter Data to extract only one variable after the \"processing node\" step .\r\n * Modify the message to fit with standard widgets such as gauges.\r\n * Limit the number of messages to a maximum of 10 msg per second.\r\n\r\n### **Input**\r\n\r\nThe subflow 'single value' takes in input the `msg.payload`\r\nfrom the processing output. All the messages sent by the processing node have the same structure.\r\n\r\n    \"payload\": {\r\n        \"groupname\": \"Snapshot2\",\r\n        \"variabledata\": [\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            }\r\n        ],\r\n        \"variablename\": \"int2\"\r\n      }\r\n    }\r\n\r\n### **Filter on selected variable**\r\nSeveral messages are sent by the processing node for each variable, so the first step of this 'single value' subflow is to filter and keep only messages related to the selected variable.\r\nThe 'filter variable' node will only keep messages with the right `variablename` key.\r\n\r\n### **Extract duplets table**\r\n\r\nThe received message is an Object containing {groupname, variabledata[array], variablename}.  \r\nThe array contains two variables :\r\n - `y` the value \r\n - `x` the time\r\n\r\nA single message contains multiple pairs of values extract at a regular time interval.\r\nThe time interval depends on the acquisition frequency.\r\nWith the 'change' node and the `set` property, the `msg.payload` is set to \r\n`msg.payload.variabledata`, only the data variable array is set into msg.payload.\r\n\r\n    \"payload\": {\r\n        \"variabledata\": [\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            }\r\n        ]\r\n    }\r\n\r\n### **Split duplets table**\r\n\r\nThe data variable array is split with a length of one in smaller objects by the 'split' node.\r\nEach new object contains two subvariables : `y` and `x`.\r\n\r\n    \"payload\": {\r\n        \"y\": \"9\",\r\n        \"x\": \"1567509421459\"\r\n    }\r\n\r\n\r\n### **Limit the number of messages**\r\n\r\nThe 'delay' node allows to limit the maximum number of message per second.\r\nIn the 'single value' subflow, one message is extracted per second.\r\n\r\n>_Be careful, a dashboard saturation risk exists if too many messages are received per second._\r\n\r\n### **Extract only y values**\r\n\r\nThe `msg.payload` is set to `msg.payload.y` with the `set` property. \r\nOnly `y` variable is set into msg.payload as single value.\r\n\r\n    \"payload\": { \r\n        \"y\": \"9\" \r\n    }\r\n\r\n### **Output** \r\n\r\nSome widgets such as the gauge and the text node are using the `msg.payload` property.  \r\nThe output node is linked to a gauge that allows to see the evolution \r\nof the `y` variable as a function of time.\r\n\r\n\r\n![subflow_gauge](images/subflow_gauge.png)\r\n\r\n### **Details**\r\n\r\nNote : The debug node allows to see clearly and easily the \r\nmessage at the node output.  \r\n\r\n\r\n> More details on : [Node-Red](https://nodered.org/docs/user-guide/editor/workspace/subflows)\r\n\r\n\r\n-------\r\n\r\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "3c5ffe0d.9063b2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 140,
                "wires": [
                    {
                        "id": "66397fd3.d8111",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "varfilter",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-filter",
                    "label": {
                        "en-US": "Variable"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#3CB4E6"
    },
    {
        "id": "3c5ffe0d.9063b2",
        "type": "switch",
        "z": "8381c865.236028",
        "name": "filter variable",
        "property": "payload.variablename",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "varfilter",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "4e5ba7a5.14dec8"
            ]
        ]
    },
    {
        "id": "4e5ba7a5.14dec8",
        "type": "change",
        "z": "8381c865.236028",
        "name": "keep only table of duplets",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.variabledata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "42bc6ed.5b20d9"
            ]
        ]
    },
    {
        "id": "42bc6ed.5b20d9",
        "type": "split",
        "z": "8381c865.236028",
        "name": "Split a table[1..n] of duplets in n msg of single duplet",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 800,
        "y": 60,
        "wires": [
            [
                "8b8ddb84.6fb208"
            ]
        ]
    },
    {
        "id": "8b8ddb84.6fb208",
        "type": "delay",
        "z": "8381c865.236028",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "66397fd3.d8111"
            ]
        ]
    },
    {
        "id": "66397fd3.d8111",
        "type": "change",
        "z": "8381c865.236028",
        "name": "keep only value and delete timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.y",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "96eb8550511295fd",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9051ad11bf35db2f",
        "type": "acquisition out",
        "z": "96eb8550511295fd",
        "name": "myProbe_Out",
        "probeconfig": "716cc519019fab07",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "78e846332ca10f2a",
        "type": "variables",
        "z": "96eb8550511295fd",
        "groupname": "myVariables2",
        "accesspoint": 0,
        "execonfig": "a169e8e72c7d1acd",
        "variablelist": [],
        "triggerstartmode": "manual",
        "triggername": "ADC1IN1",
        "triggerthreshold": "30000",
        "frequency": "",
        "frequencyType": "1",
        "snapshotheader": "",
        "mode": "direct",
        "lastImportedTime": 1733154735526,
        "openStatus": true,
        "x": 440,
        "y": 160,
        "wires": [
            [
                "9051ad11bf35db2f"
            ],
            []
        ]
    },
    {
        "id": "2f5878518a82d689",
        "type": "inject",
        "z": "96eb8550511295fd",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "start",
        "payload": "",
        "payloadType": "str",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "78e846332ca10f2a"
            ]
        ]
    },
    {
        "id": "7f55aba9b1b6cb54",
        "type": "inject",
        "z": "96eb8550511295fd",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "stop",
        "payload": "",
        "payloadType": "str",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "78e846332ca10f2a"
            ]
        ]
    },
    {
        "id": "a7e41255f14336e9",
        "type": "acquisition in",
        "z": "96eb8550511295fd",
        "name": "myProbe_In",
        "probeconfig": "716cc519019fab07",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "8b8df741f7acbeb0"
            ],
            []
        ]
    },
    {
        "id": "8b8df741f7acbeb0",
        "type": "processing",
        "z": "96eb8550511295fd",
        "groupname": "myVariables2",
        "groupid": "78e846332ca10f2a",
        "expressions": [],
        "statistics": [],
        "logmode": "no",
        "logformat": "stcm",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "6ef7e5529c9b31ca",
                "d5f564ca886ae9a4",
                "105913988ca29554"
            ],
            []
        ]
    },
    {
        "id": "6ef7e5529c9b31ca",
        "type": "subflow:8381c865.236028",
        "z": "96eb8550511295fd",
        "name": "ADC1IN1",
        "env": [
            {
                "name": "varfilter",
                "value": "ADC1IN1",
                "type": "str"
            }
        ],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "9f2298c6fb6380d2"
            ]
        ]
    },
    {
        "id": "0efdb7e8277f155a",
        "type": "debug",
        "z": "96eb8550511295fd",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 460,
        "wires": []
    },
    {
        "id": "9f2298c6fb6380d2",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adc1in1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d5f564ca886ae9a4",
        "type": "subflow:8381c865.236028",
        "z": "96eb8550511295fd",
        "name": "ADC1IN2",
        "env": [
            {
                "name": "varfilter",
                "value": "ADC1IN2",
                "type": "str"
            }
        ],
        "x": 620,
        "y": 340,
        "wires": [
            [
                "e0f5a6e1ba41a4b6"
            ]
        ]
    },
    {
        "id": "e0f5a6e1ba41a4b6",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adc1in2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "105913988ca29554",
        "type": "subflow:8381c865.236028",
        "z": "96eb8550511295fd",
        "name": "BLUELED",
        "env": [
            {
                "name": "varfilter",
                "value": "BLUELED",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "6b999e3cf254d9b1"
            ]
        ]
    },
    {
        "id": "6b999e3cf254d9b1",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "blueled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "59ab32a02f337020",
        "type": "function",
        "z": "96eb8550511295fd",
        "name": "function 1",
        "func": "msg.topic = \"InfluxData\"\nvar adc1in1 = flow.get('adc1in1')\nvar adc1in2 = flow.get('adc1in2')\nvar blueled = flow.get('blueled')\nmsg.payload = {\n    \"adc1in1\": adc1in1,\n    \"voltage1\": (adc1in1 * 3.3) / 4095,\n    \"adc1in2\": adc1in2,\n    \"voltage2\": (adc1in2 * 3.3) / 4095,\n    \"blueled\": blueled\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 460,
        "wires": [
            [
                "0efdb7e8277f155a",
                "7451c8b9fdbb8d32"
            ]
        ]
    },
    {
        "id": "807d9d4667d0c847",
        "type": "inject",
        "z": "96eb8550511295fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 460,
        "wires": [
            [
                "59ab32a02f337020"
            ]
        ]
    },
    {
        "id": "3b9abf691dbf0119",
        "type": "switch",
        "z": "96eb8550511295fd",
        "name": "",
        "property": "payload.variablename",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ADC1IN1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ADC1IN2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BLUELED",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "10f136b6b5118a13"
            ],
            [
                "4a23eb65449639c3"
            ],
            [
                "f5ed470ce4d65746"
            ]
        ]
    },
    {
        "id": "10f136b6b5118a13",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adc1in1",
                "pt": "flow",
                "to": "payload.variabledata.0.y",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "045a3621435a111f",
        "type": "function",
        "z": "96eb8550511295fd",
        "name": "function 2",
        "func": "msg.topic = \"InfluxData\"\nmsg.payload = {\n    \"adc1in1\": Math.floor(Math.random()*4096),\n    \"voltage1\": Math.random() * 3.3,\n    \"adc1in2\": Math.floor(Math.random()*4096),\n    \"voltage2\": Math.random() * 3.3,\n    \"blueled\": Math.round(Math.random())\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 760,
        "wires": [
            [
                "29c926c400c9e97c",
                "4bfd950d1ad6f627"
            ]
        ]
    },
    {
        "id": "8c3871c03f38a493",
        "type": "inject",
        "z": "96eb8550511295fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "045a3621435a111f"
            ]
        ]
    },
    {
        "id": "29c926c400c9e97c",
        "type": "debug",
        "z": "96eb8550511295fd",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 760,
        "wires": []
    },
    {
        "id": "4bfd950d1ad6f627",
        "type": "influxdb out",
        "z": "96eb8550511295fd",
        "influxdb": "49c368480b4ef91d",
        "name": "LAB07-Test",
        "measurement": "Test",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ELT73A-S22T",
        "bucket": "LAB07",
        "x": 470,
        "y": 820,
        "wires": []
    },
    {
        "id": "74c75d3bca1ea91a",
        "type": "influxdb in",
        "z": "96eb8550511295fd",
        "influxdb": "49c368480b4ef91d",
        "name": "Query-Last",
        "query": "from(bucket: \"LAB07\")\n  |> range(start: -1h, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"STM32\")\n  |> filter(fn: (r) => r[\"_field\"] == \"adc1in1\")\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "ELT73A-S22T",
        "x": 290,
        "y": 880,
        "wires": [
            [
                "cf06ddec57ac32b5",
                "02aadb2752f86437"
            ]
        ]
    },
    {
        "id": "8a55e568e10b3648",
        "type": "inject",
        "z": "96eb8550511295fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 880,
        "wires": [
            [
                "74c75d3bca1ea91a"
            ]
        ]
    },
    {
        "id": "cf06ddec57ac32b5",
        "type": "debug",
        "z": "96eb8550511295fd",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 880,
        "wires": []
    },
    {
        "id": "7451c8b9fdbb8d32",
        "type": "influxdb out",
        "z": "96eb8550511295fd",
        "influxdb": "49c368480b4ef91d",
        "name": "LAB07-STM32",
        "measurement": "STM32",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ELT73A-S22T",
        "bucket": "LAB07",
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "4a23eb65449639c3",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adc1in2",
                "pt": "flow",
                "to": "payload.variabledata.0.y",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f5ed470ce4d65746",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "blueled",
                "pt": "flow",
                "to": "payload.variabledata.0.y",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "02aadb2752f86437",
        "type": "change",
        "z": "96eb8550511295fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.0._value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 920,
        "wires": [
            [
                "3f168c0e32dae64e"
            ]
        ]
    },
    {
        "id": "3f168c0e32dae64e",
        "type": "debug",
        "z": "96eb8550511295fd",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 920,
        "wires": []
    },
    {
        "id": "716cc519019fab07",
        "type": "probe",
        "probeid": "B55B5A1A000000009DE1EE01",
        "probename": "ST-Link v2 B55B5A1A000000009DE1EE01",
        "protocol": "SWD",
        "frequency": "1.8 MHz - Default",
        "probeproperty": "{\"SWD\":[\"4.6 MHz\",\"1.8 MHz - Default\",\"950 kHz\",\"400 kHz\",\"150 kHz\"],\"JTAG\":[\"18 MHz\",\"9 MHz\",\"4.5 MHz\",\"2.25 MHz\",\"1.12 MHz - Default\",\"560 kHz\",\"280 kHz\",\"140 kHz\"]}",
        "probeversion": "ST Link firmware version V2.J45",
        "connectionType": "p2p",
        "nickname": ""
    },
    {
        "id": "a169e8e72c7d1acd",
        "type": "exe-config",
        "name": "TIM2ADC1DMA",
        "exefile": "C:\\Users\\ruseler\\Documents\\STM32\\ELT73A-LAB07\\TIM2ADC1DMA\\build\\Debug\\TIM2ADC1DMA.elf",
        "exefolder": "C:/Users/ruseler/Documents/STM32/ELT73A-LAB07/TIM2ADC1DMA/build/Debug",
        "exevariablelist": [
            {
                "address": "0x2000011c",
                "name": "AD_RES_BUFFER[0]",
                "type": 5
            },
            {
                "address": "0x20000124",
                "name": "ADC1IN1",
                "type": 3,
                "checked": true
            },
            {
                "address": "0x20000126",
                "name": "ADC1IN2",
                "type": 3,
                "checked": true
            },
            {
                "address": "0x08003d24",
                "name": "AHBPrescTable[0]",
                "type": 1
            },
            {
                "address": "0x20000118",
                "name": "BLUELED",
                "type": 1,
                "checked": true
            },
            {
                "address": "0x20000060",
                "name": "hadc1.DMA_Handle",
                "type": 5
            },
            {
                "address": "0x2000006c",
                "name": "hadc1.ErrorCode",
                "type": 5
            },
            {
                "address": "0x2000002c",
                "name": "hadc1.Init.ClockPrescaler",
                "type": 5
            },
            {
                "address": "0x20000040",
                "name": "hadc1.Init.ContinuousConvMode",
                "type": 2
            },
            {
                "address": "0x20000034",
                "name": "hadc1.Init.DataAlign",
                "type": 5
            },
            {
                "address": "0x20000048",
                "name": "hadc1.Init.DiscontinuousConvMode",
                "type": 2
            },
            {
                "address": "0x20000058",
                "name": "hadc1.Init.DMAContinuousRequests",
                "type": 2
            },
            {
                "address": "0x2000003c",
                "name": "hadc1.Init.EOCSelection",
                "type": 5
            },
            {
                "address": "0x20000050",
                "name": "hadc1.Init.ExternalTrigConv",
                "type": 5
            },
            {
                "address": "0x20000054",
                "name": "hadc1.Init.ExternalTrigConvEdge",
                "type": 5
            },
            {
                "address": "0x20000044",
                "name": "hadc1.Init.NbrOfConversion",
                "type": 5
            },
            {
                "address": "0x2000004c",
                "name": "hadc1.Init.NbrOfDiscConversion",
                "type": 5
            },
            {
                "address": "0x20000030",
                "name": "hadc1.Init.Resolution",
                "type": 5
            },
            {
                "address": "0x20000038",
                "name": "hadc1.Init.ScanConvMode",
                "type": 5
            },
            {
                "address": "0x20000028",
                "name": "hadc1.Instance",
                "type": 5
            },
            {
                "address": "0x20000064",
                "name": "hadc1.Lock",
                "type": 2
            },
            {
                "address": "0x2000005c",
                "name": "hadc1.NbrOfCurrentConversionRank",
                "type": 5
            },
            {
                "address": "0x20000068",
                "name": "hadc1.State",
                "type": 5
            },
            {
                "address": "0x200000c4",
                "name": "hdma_adc1.ErrorCode",
                "type": 5
            },
            {
                "address": "0x20000074",
                "name": "hdma_adc1.Init.Channel",
                "type": 5
            },
            {
                "address": "0x20000078",
                "name": "hdma_adc1.Init.Direction",
                "type": 5
            },
            {
                "address": "0x20000094",
                "name": "hdma_adc1.Init.FIFOMode",
                "type": 5
            },
            {
                "address": "0x20000098",
                "name": "hdma_adc1.Init.FIFOThreshold",
                "type": 5
            },
            {
                "address": "0x2000009c",
                "name": "hdma_adc1.Init.MemBurst",
                "type": 5
            },
            {
                "address": "0x20000088",
                "name": "hdma_adc1.Init.MemDataAlignment",
                "type": 5
            },
            {
                "address": "0x20000080",
                "name": "hdma_adc1.Init.MemInc",
                "type": 5
            },
            {
                "address": "0x2000008c",
                "name": "hdma_adc1.Init.Mode",
                "type": 5
            },
            {
                "address": "0x200000a0",
                "name": "hdma_adc1.Init.PeriphBurst",
                "type": 5
            },
            {
                "address": "0x20000084",
                "name": "hdma_adc1.Init.PeriphDataAlignment",
                "type": 5
            },
            {
                "address": "0x2000007c",
                "name": "hdma_adc1.Init.PeriphInc",
                "type": 5
            },
            {
                "address": "0x20000090",
                "name": "hdma_adc1.Init.Priority",
                "type": 5
            },
            {
                "address": "0x20000070",
                "name": "hdma_adc1.Instance",
                "type": 5
            },
            {
                "address": "0x200000a4",
                "name": "hdma_adc1.Lock",
                "type": 2
            },
            {
                "address": "0x200000a8",
                "name": "hdma_adc1.Parent",
                "type": 5
            },
            {
                "address": "0x200000a5",
                "name": "hdma_adc1.State",
                "type": 2
            },
            {
                "address": "0x200000c8",
                "name": "hdma_adc1.StreamBaseAddress",
                "type": 5
            },
            {
                "address": "0x200000cc",
                "name": "hdma_adc1.StreamIndex",
                "type": 5
            },
            {
                "address": "0x200000c0",
                "name": "hdma_adc1.XferAbortCallback",
                "type": 5
            },
            {
                "address": "0x200000ac",
                "name": "hdma_adc1.XferCpltCallback",
                "type": 5
            },
            {
                "address": "0x200000bc",
                "name": "hdma_adc1.XferErrorCallback",
                "type": 5
            },
            {
                "address": "0x200000b0",
                "name": "hdma_adc1.XferHalfCpltCallback",
                "type": 5
            },
            {
                "address": "0x200000b4",
                "name": "hdma_adc1.XferM1CpltCallback",
                "type": 5
            },
            {
                "address": "0x200000b8",
                "name": "hdma_adc1.XferM1HalfCpltCallback",
                "type": 5
            },
            {
                "address": "0x200000ec",
                "name": "htim2.Channel",
                "type": 2
            },
            {
                "address": "0x20000112",
                "name": "htim2.ChannelNState[0]",
                "type": 2
            },
            {
                "address": "0x2000010e",
                "name": "htim2.ChannelState[0]",
                "type": 2
            },
            {
                "address": "0x20000116",
                "name": "htim2.DMABurstState",
                "type": 2
            },
            {
                "address": "0x200000f0",
                "name": "htim2.hdma[0]",
                "type": 5
            },
            {
                "address": "0x200000e8",
                "name": "htim2.Init.AutoReloadPreload",
                "type": 5
            },
            {
                "address": "0x200000e0",
                "name": "htim2.Init.ClockDivision",
                "type": 5
            },
            {
                "address": "0x200000d8",
                "name": "htim2.Init.CounterMode",
                "type": 5
            },
            {
                "address": "0x200000dc",
                "name": "htim2.Init.Period",
                "type": 5
            },
            {
                "address": "0x200000d4",
                "name": "htim2.Init.Prescaler",
                "type": 5
            },
            {
                "address": "0x200000e4",
                "name": "htim2.Init.RepetitionCounter",
                "type": 5
            },
            {
                "address": "0x200000d0",
                "name": "htim2.Instance",
                "type": 5
            },
            {
                "address": "0x2000010c",
                "name": "htim2.Lock",
                "type": 2
            },
            {
                "address": "0x2000010d",
                "name": "htim2.State",
                "type": 2
            },
            {
                "address": "0x20000008",
                "name": "SystemCoreClock",
                "type": 5
            },
            {
                "address": "0x20000130",
                "name": "uwTick",
                "type": 5
            },
            {
                "address": "0x20000004",
                "name": "uwTickFreq",
                "type": 2
            },
            {
                "address": "0x20000000",
                "name": "uwTickPrio",
                "type": 5
            },
            {
                "address": "0x20000128",
                "name": "voltage1",
                "type": 9,
                "checked": true
            },
            {
                "address": "0x2000012c",
                "name": "voltage2",
                "type": 9,
                "checked": true
            }
        ],
        "expand": false,
        "filename": "TIM2ADC1DMA.elf",
        "exeModifiedTime": 1733144942851,
        "configLastUpdate": 1733154735187
    },
    {
        "id": "49c368480b4ef91d",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://influxdb.adrianoruseler.com",
        "timeout": "10",
        "rejectUnauthorized": true
    }
]